function init(self)
	math.randomseed(os.time())
	msg.post("#camera", "acquire_camera_focus")
	msg.post(".", "acquire_input_focus")
	--go.animate(".", "euler.y", go.PLAYBACK_LOOP_FORWARD, 360, go.EASING_LINEAR, 10)
    --go.animate("/CameraModel", "euler.y", go.PLAYBACK_LOOP_FORWARD, 360, go.EASING_LINEAR, 10)
    --go.animate("/VideoModel", "euler.y", go.PLAYBACK_LOOP_FORWARD, 360, go.EASING_LINEAR, 10)
    
    --go.animate("/video", "euler.y", go.PLAYBACK_LOOP_FORWARD, 360, go.EASING_LINEAR, 10)
	if camera.start_capture() then
		self.cameraframe = camera.get_frame()
		self.camerainfo = camera.get_info()
		self.cameraheader = { width=1280, height=720, type=resource.TEXTURE_TYPE_2D, format=resource.TEXTURE_FORMAT_RGB, num_mip_maps=1 }
	else
		print("could not start camera capture")
	end

    --local videoresource = resource.load("/videos/test.webm")
    local videoresource = resource.load("/videos/big_buck_bunny.webm")
    self.video = videoplayer.open(videoresource)
    self.videoinfo = videoplayer.get_info(self.video)
    self.videoheader = { width=self.videoinfo.width, height=self.videoinfo.height, type=resource.TEXTURE_TYPE_2D, format=resource.TEXTURE_FORMAT_RGB, num_mip_maps=1 }
    self.videoframe = videoplayer.get_frame(self.video)

	gyro.start(function(self, x, y, z, quat, matrix)
		go.set_rotation(quat)
	end)
	
	for i=1,10 do
		local angle = math.rad(math.random(360))
		local pos = vmath.vector3(20 * math.sin(angle), 20 * math.cos(angle), math.random(15, 25))
		local rot = vmath.quat_rotation_x(math.rad(90))
		factory.create("#enemyfactory", pos, rot, {}, 2)
	end
end

function final(self)
	msg.post("#camera", "release_camera_focus")
	msg.post(".", "release_input_focus")
end


function update(self, dt)
    videoplayer.update(self.video, dt)
    
    if self.cameraframe then
    	local pathmodelcamera = go.get("/CameraModel#model", "texture0")
    	resource.set_texture(pathmodelcamera, self.cameraheader, self.cameraframe)
    end
    
    local pathmodelvideo = go.get("/VideoModel#model", "texture0")
    resource.set_texture(pathmodelvideo, self.videoheader, self.videoframe)
end


function on_input(self, action_id, action)
	if action_id == hash("touch") then
		if action.pressed then
			self.pressed_pos = vmath.vector3(action.x, action.y, 0)
			self.pressed_time = socket.gettime()
		elseif action.released then
			local time = socket.gettime() - self.pressed_time
			local direction = vmath.vector3(action.x, action.y, 0) - self.pressed_pos
			local distance = vmath.length(direction)
			local pos = go.get_world_position()
			print(pos)
			local id = factory.create("#bombfactory", pos)
			
			print("spawn bomb", (math.abs(distance) / time))
			local rot = go.get_world_rotation()
			local force = vmath.rotate(rot, vmath.vector3(0, 0.75, -1) * (math.abs(distance) * 2.5 / time))
			msg.post(id, "apply_force", { force = force, position = pos })
		end
	end
end

